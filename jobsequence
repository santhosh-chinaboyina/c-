#include <stdio.h>
#include <stdlib.h>
typedef struct {
    int jobId;
    int deadline;
    int profit;
} Job;
int compareJobs(const void *a, const void *b) {
    Job *jobA = (Job*)a;
    Job *jobB = (Job*)b;
    return jobB->profit - jobA->profit;
}
void jobSequencing(Job jobs[], int n) {
    qsort(jobs, n, sizeof(Job), compareJobs);
    int i,j,maxDeadline = 0;
    for ( i = 0; i < n; i++) {
        if (jobs[i].deadline > maxDeadline)
            maxDeadline = jobs[i].deadline;  
    }
    int *slots = (int*)malloc(maxDeadline * sizeof(int));
    for ( i = 0; i < maxDeadline; i++) {
        slots[i] = -1;
    }
    int totalProfit = 0;
    int jobCount = 0;
    for (i = 0; i < n; i++) {
        for (j = jobs[i].deadline - 1; j >= 0; j--) {
            if (slots[j] == -1) {
                slots[j] = jobs[i].jobId;
                totalProfit += jobs[i].profit;
                jobCount++;
                break;
            }
        }
    }
    printf("The selected jobs are: \n");
    for (i = 0; i < maxDeadline; i++) {
        if (slots[i] != -1) {
            printf("Job %d (Profit: %d) \n", slots[i], jobs[i].profit);
        }
    }
    printf("Total Profit: %d\n", totalProfit);
}
int main() {
    int n,i;
    printf("Enter the number of jobs: ");
    scanf("%d", &n);
    Job jobs[n];
    for (i = 0; i < n; i++) {
        printf("Enter details for Job %d\n", i + 1);
        printf("Job ID: ");
        scanf("%d", &jobs[i].jobId);
        printf("Deadline: ");
        scanf("%d", &jobs[i].deadline);
        printf("Profit: ");
        scanf("%d", &jobs[i].profit);
    }
    jobSequencing(jobs, n);
    return 0;
}
